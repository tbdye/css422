00006FFC Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/11/2016 11:23:39 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Test Branches
00000000                             3  * Written by : Thomas Dye
00000000                             4  * Date       : 3/11/16
00000000                             5  * Description: Test all banches with basic commands.  Can't actually run on its own.
00000000                             6  *-----------------------------------------------------------
00006FFC                             7  START   ORG     $6FFC
00006FFC                             8  
00006FFC                             9  * Assigned opcodes here
00006FFC  6000 0074                 10  test1   BRA     done
00007000  D200                      11  first   ADD.B   D0,D1       ; D200 - ADD
00007002  D0C0                      12          ADDA.W  D0,A0       ; D0C0 - ADDA
00007004  0600 00FF                 13          ADDI.B  #$FF,D0     ; 0600 00FF - ADDI
00007008  5200                      14          ADDI.B  #1,D0       ; 5200 - ADDQ (need to add)
0000700A  C200                      15          AND.B   D0,D1       ; C200 - AND
0000700C  0200 0001                 16          ANDI.B  #1,D0       ; 0200 0001 - ANDI
00007010  E300                      17          ASL.B   #1,D0       ; E300 - SHIFT_ROT
00007012  E200                      18          ASR.B   #1,D0       ; E200 - SHIFT_ROT
00007014  64E6                      19          BCC     test1       ; 64E6 - BCC (00006FFC)
00007016  64E4                      20          BCC.B   test1       ; 64E4 - BCC (00006FFC)
00007018  6400 FFE2                 21          BCC.W   test1       ; 6400 FFE2 - BCC (00006FFC)
0000701C  6E00 0058                 22          BGT     test2       ; 6E00 0058 - BCC (00007076)
00007020  6E54                      23          BGT.B   test2       ; 6E54 - BCC (00007076)
00007022  6E00 0052                 24          BGT.W   test2       ; 6E00 0052 - BCC (00007076)
00007026  6F06                      25          BLE     $702E       ; 6F06 - BCC (0000702E)
00007028  6F04                      26          BLE.B   $702E       ; 6F04 - BCC (0000702E)
0000702A  6F00 0002                 27          BLE.W   $702E       ; 6F00 0002 - BCC (0000702E)
0000702E  4200                      28          CLR.B   D0          ; 4200 - CLR
00007030  B200                      29          CMP.B   D0,D1       ; B200 - CMP
00007032  0C00 0001                 30          CMPI.B  #1,D0       ; 0C00 0001 - CMPI
00007036  83FC 0001                 31          DIVS.W  #1,D1       ; 83FC 0001 - DIVS
0000703A  82FC 0001                 32          DIVU.W  #1,D1       ; 82FC 0001 - DIVU
0000703E  4EB9 0000707A             33          JSR     test4       ; 4EB9 0000707A - JSR (JSR displacement may shift if opcodes are added)
00007044  41F9 0000707C             34          LEA     msg,A0      ; 41F9 0000707C - LEA (LEA displacement may shift if opcodes are added)
0000704A  E308                      35          LSL.B   #1,D0       ; E308 - SHIFT_ROT
0000704C  E208                      36          LSR.B   #1,D0       ; E208 - SHIFT_ROT
0000704E  1200                      37          MOVE.B  D0,D1       ; 1200 - MOVEB
00007050  2200                      38          MOVE.L  D0,D1       ; 2200 - MOVEL
00007052  3200                      39          MOVE.W  D0,D1       ; 3200 - MOVEW
00007054  48A7 8000                 40          MOVEM.W D0,-(SP)    ; 48A7 8000 - MOVEM_TO_EA
00007058  7001                      41          MOVEQ.L #1,D0       ; 7001 - MOVEQ
0000705A  C3C0                      42          MULS.W  D0,D1       ; C3C0 - MULS
0000705C  4E71                      43          NOP                 ; 4E71 - NOP
0000705E  4641                      44          NOT.W   D1          ; 4641 - NOT (Triggers OP_INVALID)
00007060  E318                      45          ROL.B   #1,D0       ; E318 - SHIFT_ROT
00007062  E218                      46          ROR.B   #1,D0       ; E218 - SHIFT_ROT
00007064  5300                      47          SUB.B   #1,D0       ; 5300 - SUBQ (need to add)
00007066  0400 00FF                 48          SUB.B   #$FF,D0     ; 0040 00FF - SUBI
0000706A  9200                      49          SUB.B   D0,D1       ; 9200 - SUB
0000706C  5348                      50          SUBA.W  #1,A0       ; 5348 - SUBQ
0000706E  90FC 00FF                 51          SUBA.W  #$FF,A0     ; 90FC 00FF - SUBA
00007072                            52  
00007072                            53  * Optional opcodes here
00007072                            54          ;BCHG.L  #1,D0       ; 0840 0001 - BIT_OP
00007072                            55          
00007072  FFFF FFFF                 56  done    SIMHALT             ; halt simulator
00007076                            57  
00007076  60FA                      58  test2   BRA     done
00007078  60F8                      59  test3   BRA     done
0000707A  4E75                      60  test4   RTS
0000707C                            61  
0000707C= 74 65 73 74 35 00         62  msg     DC.B    'test5',0
00007082                            63  
00007082                            64          END     START       ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
DONE                7072
FIRST               7000
MSG                 707C
START               6FFC
TEST1               6FFC
TEST2               7076
TEST3               7078
TEST4               707A
