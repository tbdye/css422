00007000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2016 12:54:22 PM

00000000                             1  *****************************
00000000                             2  *
00000000                             3  * demo_test.X68
00000000                             4  *
00000000                             5  * Created 3/06/2016
00000000                             6  *
00000000                             7  * Test program for CSS 422 Disassembler Project Demo
00000000                             8  *
00000000                             9  *****************************
00000000                            10  
00000000  =00007000                 11  start           EQU     $00007000       * ORG and END address
00000000                            12  
00000000                            13  * ORG the program so that it straddles the address boundary $00007FFF to $00008000
00000000                            14  
00007000                            15                  ORG     start
00007000                            16  
00007000                            17  * NOP and similar instructions. Should clearly differentiate NOP and RTS from others.
00007000                            18  
00007000  4E71                      19                  NOP                     *Required
00007002  4E75                      20                  RTS                     *Required
00007004                            21  
00007004                            22  
00007004                            23  * This is a group of ADD instructions
00007004                            24  
00007004  0641 4E71                 25  add_start       ADDI.W  #$4E71,D1
00007008  5E87                      26                  ADDQ.L  #07,D7          
0000700A  D5E7                      27                  ADDA.L  -(SP),A2
0000700C  D6DE                      28                  ADDA.W  (A6)+,A3
0000700E  DDFC 3000AAAA             29                  ADDA.L  #$3000AAAA,A6
00007014  0685 D50000AA             30                  ADDI.L  #$D50000AA,D5
0000701A  0646 5555                 31                  ADDI.W  #$5555,D6
0000701E  0600 00FE                 32                  ADDI.B  #$FE,D0
00007022                            33                  
00007022                            34  * Group is random data
00007022                            35  
00007022= FF AA 45 0A               36  data1           DC.B            $FF,$AA,$45,$0A
00007026= 00 00 01 00 00 00         37  data2           DC.B            $00,00,01,00,00,00
0000702C= AAAA 5555 0000 FFFF       38  data3           DC.W            $AAAA,$5555,0000,$FFFF
00007034                            39  
00007034                            40  * This is an illegal instruction, MOVE.B    #$0F,A6
00007034                            41  
00007034                            42  * illegal               DC.W            $1C7C,$000F
00007034                            43  
00007034                            44  * Move instructions
00007034                            45  
00007034  1200                      46  moves           MOVE.B  D0,D1
00007036  33CE F30045BB             47                  MOVE.W  A6,$F30045BB
0000703C  2000                      48                  MOVE.L  D0,D0
0000703E  2CC7                      49                  MOVE.L  D7,(A6)+
00007040  36BC FFD0                 50                  MOVE.W  #$FFD0,(A3)
00007044  23F9 C00022AA 3000A0F8    51                  MOVE.L  $C00022AA,$3000A0F8
0000704E  2B08                      52                  MOVE.L  A0,-(A5)
00007050  3056                      53                  MOVEA.W (A6),A0
00007052  48B6 07E0 483A            54                  MOVEM.W A0/A1/A2/D5/D6/D7,$3A(A6,D4.L)
00007058  4CD8 1B07                 55                  MOVEM.L (A0)+,D0/D1/D2/A4/A3/A0/A1
0000705C                            56  *               MOVEA.L #$AAAA00AA,A2
0000705C                            57                  
0000705C                            58  * Divide and multiple optional instructions
0000705C                            59  
0000705C  0238 0001 4568            60  ands            AND.B   #$01,$4568
00007062  C6B9 8000A000             61                  AND.L   $8000A000,D3
00007068  E128                      62  shifts          LSL.B   D0,D0
0000706A  E948                      63                  LSL.W   #4,D0
0000706C  E3DA                      64                  LSL.W   (A2)+
0000706E  EC27                      65                  ASR.B   D6,D7
00007070  E5BB                      66  rolls           ROL.L   D2,D3
00007072  E89E                      67                  ROR.L   #4,D6
00007074                            68  
00007074  4204                      69  clear           CLR.B   D4
00007076  45F9 DC00FF00             70  load_addr       LEA     $DC00FF00,A2
0000707C  49D5                      71                  LEA     (A5),A4
0000707E  47FA FFDC                 72                  LEA     (ands,PC),A3
00007082  45F2 70E0                 73                  LEA     -$20(A2,D7),A2
00007086                            74  
00007086                            75  * random data   
00007086= 0B85 019B 0B20 1EBD       76                  DC.W    2949,0411,2848,7869
0000708E                            77  
0000708E  BA13                      78  compares        CMP.B   (A3),D5
00007090  B4B9 ABC0FF00             79                  CMP.L   $ABC0FF00,D2
00007096  B8C2                      80                  CMPA.W  D2,A4
00007098                            81  * Branches      
00007098                            82                  
00007098                            83  
00007098                            84  * Jump and branch instructions
00007098                            85  
00007098  61F4                      86  jmplabel        BSR     compares        * BSR long test
0000709A  61D4                      87                  BSR     rolls           * BSR short test        
0000709C  4E93                      88                  JSR     (A3)            * Address register indirect
0000709E  6100 000E                 89                  BSR     multiply
000070A2  6100 AF5C                 90                  BSR     $2000
000070A6  64CC                      91                  BCC     clear           
000070A8  6EE4                      92                  BGT     compares                
000070AA  6F00 0002                 93                  BLE     multiply        
000070AE                            94  
000070AE                            95                  
000070AE                            96                  
000070AE                            97                  
000070AE                            98  *These are not required instructions
000070AE  C7C0                      99  multiply        MULS    D0,D3           *Optional instruction
000070B0  C1D6                     100                  MULS    (A6),D0         *Optional instruction
000070B2  C3FC 4567                101                  MULS    #$4567,D1       *Optional instruction
000070B6  8ADB                     102                  DIVU    (A3)+,D5        *Optional instruction
000070B8  4E71                     103                  NOP
000070BA  4E71                     104                  NOP
000070BC  0484 00000055            105                  SUB.L   #$00000055,D4
000070C2  0487 FFFFFFEE            106                  SUB.L   #$FFFFFFEE,D7
000070C8                           107          
000070C8                           108  
000070C8                           109                  END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_START           7004
ANDS                705C
CLEAR               7074
COMPARES            708E
DATA1               7022
DATA2               7026
DATA3               702C
JMPLABEL            7098
LOAD_ADDR           7076
MOVES               7034
MULTIPLY            70AE
ROLLS               7070
SHIFTS              7068
START               7000
